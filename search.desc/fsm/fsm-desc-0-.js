searchState.loadedDescShard("fsm", 0, "Type alias for LatheController using the generic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType alias for the FSM controller.\nWrapper enum for the FSM states.\nCreates a new FSM controller with the given data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given data into an FSM wrapper.\nReturns the argument unchanged.\nHandles a command and returns the new state and response.\nHandles a command and returns the new state and response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new FSM wrapper with the given data.\nRepresents a Finite State Machine with a specific state …\nController for managing an FSM in a separate thread.\nTrait for handling commands in the FSM.\nChecks for any responses from the FSM.\nCreates a new FSM controller with the given data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandles a command and returns the new state and response.\nHandles a command and returns the new state and response.\nHandles a command and returns the new state and response.\nHandles a command and returns the new state and response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new FSM with the given data.\nCreates a new FSM controller with the given data.\nPrints the current state and data of the FSM.\nSends a command to the FSM.\nShuts down the FSM controller.\nHandles a command and transitions to a new state.\nHandles a command and transitions to a new state.\nHandles a command and transitions to a new state.\nHandles a command and transitions to a new state.")